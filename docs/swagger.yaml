basePath: /
definitions:
  app.loginReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  app.loginResp:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      login:
        type: string
      role:
        type: integer
      token_type:
        type: string
    type: object
  app.registerReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  app.registerResp:
    properties:
      ok:
        type: boolean
    type: object
  ds.ChangeEnrollmentStatusRequestBody:
    properties:
      enrollmentID:
        type: integer
      status:
        type: string
    type: object
  ds.ChangeEnrollmentToGroupAvailabilityRequestBody:
    properties:
      availability:
        type: string
      enrollmentID:
        type: integer
    type: object
  ds.DeleteEnrollmentToGroupRequestBody:
    properties:
      enrollmentID:
        type: integer
      groupID:
        type: integer
    type: object
  ds.EnrollRequestBody:
    properties:
      groups:
        items:
          type: string
        type: array
      status:
        type: string
    type: object
  ds.Enrollment:
    properties:
      dateCreated:
        type: string
      dateFinished:
        type: string
      dateProcessed:
        type: string
      id:
        type: integer
      moderator:
        $ref: '#/definitions/ds.User'
      moderatorRefer:
        type: string
      status:
        type: string
      user:
        $ref: '#/definitions/ds.User'
      userRefer:
        type: string
    type: object
  ds.Group:
    type: object
  ds.User:
    properties:
      name:
        type: string
      pass:
        type: string
      role:
        $ref: '#/definitions/role.Role'
      uuid:
        type: string
    type: object
  role.Role:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Undefined
    - User
    - Moderator
    - Admin
host: 127.0.0.1:8080
info:
  contact: {}
  title: Запись на спортивные курсы МГТУ
  version: 0.0-0
paths:
  /enroll:
    put:
      consumes:
      - application/json
      description: Создаёт новую заявку и связывает её с группой/ами
      parameters:
      - description: Параметры записи
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ds.EnrollRequestBody'
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Записать в группу/ы
      tags:
      - Запись
  /enrollment:
    get:
      consumes:
      - application/json
      description: Возвращает запись с переданными параметрами
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Получить запись
      tags:
      - Записи
  /enrollment/delete/{enrollment_id}:
    put:
      consumes:
      - application/json
      description: Изменяет статус записи на "Удалён"
      parameters:
      - description: id записи
        in: path
        name: enrollment_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Удалить запись
      tags:
      - Записи
  /enrollment/edit:
    put:
      consumes:
      - application/json
      description: Находит запись и редактирует её поля
      parameters:
      - description: Запись
        in: body
        name: enrollment
        schema:
          $ref: '#/definitions/ds.Enrollment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Редактировать запись
      tags:
      - Записи
  /enrollment/set_group_availability:
    put:
      consumes:
      - application/json
      description: Получает id записи м-м и новый статус и производит необходимые
        обновления
      parameters:
      - description: Request body
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.ChangeEnrollmentToGroupAvailabilityRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Редактировать статус м-м
      tags:
      - Запись
  /enrollment/status_change:
    put:
      consumes:
      - application/json
      description: Получает id заявки и новый статус и производит необходимые обновления
      parameters:
      - description: Request body
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.ChangeEnrollmentStatusRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Редактировать статус записи
      tags:
      - Запись
  /enrollment_to_group/delete:
    put:
      consumes:
      - application/json
      description: Удаляет запись в таблице enrollment_to_group
      parameters:
      - description: Параметры запроса
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/ds.DeleteEnrollmentToGroupRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Удаляет связь группы с записью
      tags:
      - enrollments
  /enrollments:
    get:
      description: Возвращает список всех доступных записей
      parameters:
      - description: Статус записи
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Получить записи
      tags:
      - Записи
  /group/{group}:
    get:
      description: Возвращает данные группы с переданным названием
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Получить группу
      tags:
      - Группы
  /group/add:
    put:
      consumes:
      - application/json
      description: Создает новую группу с параметрами, описанными в json'е
      parameters:
      - description: Характеристики новой группы
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/ds.Group'
      produces:
      - application/json
      responses:
        "201":
          description: Группа успешно добавлена
          schema:
            type: string
      summary: Добавляет новую группу в БД
      tags:
      - Группы
  /group/delete/{group_title}:
    put:
      consumes:
      - application/json
      description: Находит группу по его названию и изменяет его статус на "Недоступен"
      parameters:
      - description: Название группы
        in: path
        name: group_title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Удалить группу
      tags:
      - Группы
  /group/edit:
    put:
      consumes:
      - application/json
      description: Находит группу по имени и обновляет перечисленные поля
      parameters:
      - description: Данные редактируемого группы (должны содержать имя группы или
          его id)
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/ds.Group'
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
      summary: Редактировать группу
      tags:
      - Группы
  /groups:
    get:
      consumes:
      - application/json
      description: Возвращает все существующие группы
      parameters:
      - description: Паттерн названия группы
        in: query
        name: name_pattern
        type: string
      - description: Локация
        in: query
        name: location
        type: string
      - description: Статус группы (Действует/Недействителен)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: ""
      summary: Получить все существующие группы
      tags:
      - Группы
  /login:
    post:
      consumes:
      - application/json
      description: Проверяет данные для входа и в случае успеха возвращает токен для
        входа
      parameters:
      - description: Данные для входа
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.loginResp'
      summary: Вход в систему
      tags:
      - Аутентификация
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Выйти из системы
      tags:
      - Аутентификация
  /register:
    post:
      consumes:
      - application/json
      description: Добавляет в БД нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: request_body
        required: true
        schema:
          $ref: '#/definitions/app.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.registerResp'
      summary: Зарегистрировать нового пользователя
      tags:
      - Аутентификация
schemes:
- http
swagger: "2.0"
